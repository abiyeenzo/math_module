# Ce workflow publie un package Python sur PyPI lorsque une release est créée.

name: Upload Python Package to PyPI when a Release is Created

on:
  release:
    types: [created]  # Le workflow se déclenche lorsque la release est créée.

jobs:
  pypi-publish:
    name: Publish release to PyPI  # Nom du job
    runs-on: ubuntu-latest  # Environnement d'exécution sur Ubuntu

    # Définition de l'environnement de publication sur PyPI
    environment:
      name: pypi
      url: https://pypi.org/p/math_module  # Remplacez <PYPI_PACKAGE_NAME> par le nom de votre package

    permissions:
      id-token: write  # Nécessaire pour utiliser OpenID Connect avec PyPI pour les éditions de trusted publishers

    steps:
      # Étape 1 : Récupère les fichiers de votre dépôt GitHub
      - uses: actions/checkout@v4

      # Étape 2 : Configure Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"  # Utilisation de la dernière version stable de Python

      # Étape 3 : Installe les dépendances nécessaires pour la construction du package
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Met à jour pip
          pip install setuptools wheel  # Installe setuptools et wheel pour la construction du package

      # Étape 4 : Construction du package Python (distributions sdist et bdist_wheel)
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel  # Crée les distributions source et wheel du package
          # Alternativement, vous pouvez utiliser python -m build si vous avez un fichier pyproject.toml

      # Étape 5 : Publication des distributions sur PyPI
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1  # Action officielle pour publier sur PyPI
        with:
          # Utilisation de l'API token configuré dans les secrets GitHub
          username: __token__  # Ce champ est nécessaire mais sera rempli automatiquement par le token
          password: ${{ secrets.PYPI_API_TOKEN }}  # Remplacez par un secret GitHub contenant votre PyPI token
